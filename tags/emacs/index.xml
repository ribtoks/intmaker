<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Emacs on Int Maker</title>
    <link>https://intmaker.com/tags/emacs/</link>
    <description>Recent content in Emacs on Int Maker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 29 Oct 2013 23:12:15 +0000</lastBuildDate>
    
	<atom:link href="https://intmaker.com/tags/emacs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rails development environment in Emacs on OpenSuSE Linux</title>
      <link>https://intmaker.com/2013/rails-development-environment-in-emacs-on-opensuse-linux/</link>
      <pubDate>Tue, 29 Oct 2013 23:12:15 +0000</pubDate>
      
      <guid>https://intmaker.com/2013/rails-development-environment-in-emacs-on-opensuse-linux/</guid>
      <description>&lt;p&gt;Today we&amp;rsquo;ll set up a complete Ruby On Rails development environment on Linux. For an IDE we&amp;rsquo;ll use Emacs and for host system - OpenSUSE.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s install latest Ruby+Rails bundle before configuring Emacs. You can refer to &lt;a title=&#34;Rails on OpenSUSE 12.1&#34; href=&#34;http://alphacluster.wordpress.com/2012/03/29/rails-on-opensuse-12-1/&#34; target=&#34;_blank&#34;&gt;nice article&lt;/a&gt; on that. In short, you need get RVM and follow through script steps in terminal:&lt;/p&gt;

&lt;pre&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&gt;&lt;/span&gt; bash&lt;/span&gt; -s stable &lt; &lt;(&lt;span style=&#34;color: #0000ff;&#34;&gt;curl&lt;/span&gt; -s &lt;span style=&#34;color: #808000;&#34;&gt;https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer&lt;/span&gt;)&lt;/pre&gt;

&lt;p&gt;Then load path to installed RVM in current bash session:&lt;/p&gt;

&lt;pre&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&gt;&lt;/span&gt; . ~/.bash_profile&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s a bit frustrating that if bash finds a _.bash&lt;em&gt;profile&lt;/em&gt; file, it ignores &lt;em&gt;.bashrc&lt;/em&gt;, so be careful. Usually, I just move this one line from _.bash&lt;em&gt;profile&lt;/em&gt; to &lt;em&gt;.profile&lt;/em&gt; or &lt;em&gt;.bashrc&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Then check requirements and install everything what is needed&lt;/p&gt;

&lt;pre&gt;&gt; rvm requirements&lt;/pre&gt;

&lt;p&gt;Now let&amp;rsquo;s set ruby version to 2.0 and install rails (4):&lt;/p&gt;

&lt;pre&gt;&gt; rvm install 2.0
&gt; rvm use 2.0
&gt; gem install rails
&gt; gem install sqlite3&lt;/pre&gt;

&lt;p&gt;Now, when everything is ready, we can configure Emacs installation. I assume you&amp;rsquo;ve already installed emacs package via your favorite package manager.&lt;/p&gt;

&lt;p&gt;Then lets add some custom configuration file for ruby configs in the &lt;em&gt;.emacs.d&lt;/em&gt; directory, say &lt;em&gt;ruby-configuration.el&lt;/em&gt; and add it to your .emacs file using&lt;/p&gt;

&lt;pre&gt;(&lt;span style=&#34;color: #0000ff;&#34;&gt;load&lt;/span&gt; &lt;span style=&#34;color: #339966;&#34;&gt;&#34;~/.emacs.d/ruby-configuration.el&#34;&lt;/span&gt;)&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Use Emacs for remote compilation and catch output</title>
      <link>https://intmaker.com/2013/use-emacs-for-remote-compilation/</link>
      <pubDate>Wed, 19 Jun 2013 19:57:42 +0000</pubDate>
      
      <guid>https://intmaker.com/2013/use-emacs-for-remote-compilation/</guid>
      <description>Just a small tip. I have souced and makefile on remote machine and I&amp;rsquo;m trying to compile it on my local machine, but I don&amp;rsquo;t have the compiler and environment. So when I run &amp;ldquo;M-x compile&amp;rdquo;, I use a _buildremote.sh script with following contents
#!&amp;lt;span style=&amp;quot;color:#003366;&amp;quot;&amp;gt;/bin/bash&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#003366;&amp;quot;&amp;gt;ssh&amp;lt;/span&amp;gt; my_remote_machine &amp;quot;&amp;lt;span style=&amp;quot;color:#003366;&amp;quot;&amp;gt;source&amp;lt;/span&amp;gt; my_environment_file; &amp;lt;span style=&amp;quot;color:#003366;&amp;quot;&amp;gt;cd&amp;lt;/span&amp;gt; my_build_directory; &amp;lt;span style=&amp;quot;color:#003366;&amp;quot;&amp;gt;make&amp;lt;/span&amp;gt; my_target&amp;quot;  Remember, that ssh command are executed not in your common environment, so you have to import it before execution of main commands (I use source command with some script to configure environment)</description>
    </item>
    
    <item>
      <title>Emacs hangs on large file with DOS-encoded end of lines</title>
      <link>https://intmaker.com/2013/emacs-hangs-on-large-file-with-dos-encoded-end-of-lines/</link>
      <pubDate>Sat, 08 Jun 2013 22:28:16 +0000</pubDate>
      
      <guid>https://intmaker.com/2013/emacs-hangs-on-large-file-with-dos-encoded-end-of-lines/</guid>
      <description>I&amp;rsquo;ve had a quite big C++ source file, copied from Windows with ^M symbol after each line. After any scrolling downside Emacs 24.2 hanged up and the only option was to kill it.
Due to the fact that my .emacs configuration is quite big, I started with binary search, commenting out parts of lisp code. After few minutes I&amp;rsquo;ve figured out, that the problem lies in .gnu-emacs file, so I moved with binary search to that file.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; dev via Emacs 24 in Windows 7 (visual studio includes)</title>
      <link>https://intmaker.com/2013/c-dev-via-emacs-24-in-windows-7/</link>
      <pubDate>Wed, 13 Mar 2013 08:23:35 +0000</pubDate>
      
      <guid>https://intmaker.com/2013/c-dev-via-emacs-24-in-windows-7/</guid>
      <description>Recently I had issue with CEDET 1.1: semantic was not able to parse header files from Visual Studio, when using
(semantic-add-system-include &amp;ldquo;C:/Program Files/Microsoft Visual Studio 10.0/VS/Include&amp;rdquo; &amp;lsquo;c++-mode)
But after looking through Visual Stuio headers in Studio itself, I&amp;rsquo;ve found some headers with defines, which are new to semantic, so you have to add them after this system include in your .el files:
(defun windows-semantic-hook () (setq microsoft-base-dir &amp;quot;C:/Program Files (x86)/Microsoft Visual Studio 14.</description>
    </item>
    
    <item>
      <title>Emacs 24.2 with Python and C&#43;&#43; bundle for Windows</title>
      <link>https://intmaker.com/2013/emacs-24-2-with-python-and-c-bundle-for-windows/</link>
      <pubDate>Sun, 10 Mar 2013 21:36:35 +0000</pubDate>
      
      <guid>https://intmaker.com/2013/emacs-24-2-with-python-and-c-bundle-for-windows/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve managed to put together some interesting things with Emacs for Windows. For now we have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Emacs 24.2 for Windows&lt;/li&gt;
&lt;li&gt;CEDET-1.1&lt;/li&gt;
&lt;li&gt;Auto-Complete 1.3.1&lt;/li&gt;
&lt;li&gt;Custom themes (using tango in current zip)&lt;/li&gt;
&lt;li&gt;Ocaml support (ocaml mode, eval and highlighting)&lt;/li&gt;
&lt;li&gt;Git user interface 1.0 support (with git blame)&lt;/li&gt;
&lt;li&gt;Ropemacs + Pylint + Flymake (Python IDE + static analysis)&lt;/li&gt;
&lt;li&gt;Fixes for Cygwin, gnu and git pathes in Windows&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>