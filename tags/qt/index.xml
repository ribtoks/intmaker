<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>qt on Int Maker</title>
    <link>https://intmaker.com/tags/qt/</link>
    <description>Recent content in qt on Int Maker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 09 Jun 2018 00:23:10 +0000</lastBuildDate>
    
	<atom:link href="https://intmaker.com/tags/qt/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deploying native apps to macOS</title>
      <link>https://intmaker.com/2018/deploy-to-macos/</link>
      <pubDate>Sat, 09 Jun 2018 00:23:10 +0000</pubDate>
      
      <guid>https://intmaker.com/2018/deploy-to-macos/</guid>
      <description>Level 0: warming up Deploying anything anywhere has never been easy business. Deploying applications to desktop computers is no different. OS X (now macOS) had its own solution of &amp;ldquo;dll hell&amp;rdquo;: each application should be absolutely self contained. All the dependencies and dependencies of dependencies should be distributed within the &amp;ldquo;bundle&amp;rdquo; so apps won&amp;rsquo;t conflict with other apps because of missing or outdated libraries.
Sounds good in theory, but what does it mean in practice?</description>
    </item>
    
    <item>
      <title>Ultimate ComboBox in QML</title>
      <link>https://intmaker.com/2017/ultimate-combobox-in-qml/</link>
      <pubDate>Wed, 22 Nov 2017 23:28:25 +0000</pubDate>
      
      <guid>https://intmaker.com/2017/ultimate-combobox-in-qml/</guid>
      <description>&lt;p&gt;Everybody who wanted to customize UI of &lt;code&gt;ComboBox&lt;/code&gt; in QML knows that it is only possible though crutches and hacks. Usually that&amp;rsquo;s not a problem and people start implementing their own custom ComboBoxes that are docked to somewhere. You can see an example of such implementation below (the code is simplified). These sort of implementations have few big problems which I will cover afterwards.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Item {
    id: comboBox
    property alias model: dropDownItems.model

    signal comboIndexChanged(int index);

    Rectangle {
        id: header
        anchors.fill: parent
        color: &amp;quot;gray&amp;quot;

        Text { text: dropDownItems.currentItem.itemText }

        MouseArea {
            anchors.fill: parent
            onClicked: { comboBox.state = comboBox.state === &amp;quot;down&amp;quot; ? &amp;quot;&amp;quot; : &amp;quot;down&amp;quot; }
        }
    }

    Rectangle {
        id: dropDown
        anchors.left: parent.left
        anchors.right: parent.right
        anchors.top: header.bottom
        visible: false
        height: 0
        onActiveFocusChanged: { if (!activeFocus) { comboBox.state = &amp;quot;&amp;quot;; } }

        ListView {
            id: dropDownItems
            anchors.fill: parent

            delegate: Rectangle {
                property alias itemText: modelData
                height: 20
                width: parent.width

                Text { text: modelData }

                MouseArea {
                    anchors.fill: parent
                    onClicked: {
                        comboBox.state = &amp;quot;&amp;quot;
                        if (index !== comboBox.selectedIndex) {
                            comboBox.selectedIndex = index
                            comboIndexChanged(index)
                        }
                    }
                }
            }
        }
    }

    states: State {
        name: &amp;quot;down&amp;quot;;
        PropertyChanges {
            target: dropDown
            height: 20 * dropDownItems.count
            visible: true
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This approach has 2 big flaws.&lt;/p&gt;

&lt;p&gt;The very first problem with this approach is &lt;code&gt;z-index&lt;/code&gt; management. You have to make sure that owner of your custom &lt;code&gt;ComboBox&lt;/code&gt; is on top of everything possible so I set &lt;code&gt;z: 100500&lt;/code&gt; every time I instantiated my object. But what if you have several instances which can overlap? Correct, you have to assign &lt;code&gt;z-index&lt;/code&gt; dynamically every time..&lt;/p&gt;

&lt;p&gt;The other problem with this way is the focus management in QML apps which I personally find quite clumsy and raw (but of course it could be just my lack of skill). Simple enough, you want to click outside to close the dropdown and .. usually that&amp;rsquo;s just not possible without hacks. I&amp;rsquo;ve done horrible things to workaround this. I used to put huge &lt;code&gt;MouseArea&lt;/code&gt; elements everywhere to emit &lt;code&gt;closeComboBoxes()&lt;/code&gt; signal when it get&amp;rsquo;s clicked and all the &lt;code&gt;ComboBox&lt;/code&gt; in the area were subscribed to that signal.&lt;/p&gt;

&lt;p&gt;So is there anything better?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Implementing spellchecking in desktop application in C&#43;&#43;</title>
      <link>https://intmaker.com/2016/implementing-spellchecking-in-desktop-application-in-c/</link>
      <pubDate>Sun, 05 Jun 2016 12:24:38 +0000</pubDate>
      
      <guid>https://intmaker.com/2016/implementing-spellchecking-in-desktop-application-in-c/</guid>
      <description>&lt;p&gt;When user is supposed to enter significant amount of text in your application, it&amp;rsquo;s better to help him/her to control it with checking spelling. Basically, to check spelling you need a dictionary with words and algorithm to order these words. Also it might be useful to provide user with possible corrections for any spelling error. Here where &lt;a href=&#34;https://hunspell.github.io/&#34;&gt;Hunspell&lt;/a&gt; comes handy. It&amp;rsquo;s an open source library built on top of MySpell library and used in a significant number of projects varying from open source projects like Firefox to proprietary like OS X. It contains bindings to a number of platforms (.NET, Ruby etc.) and should be fairly easy to integrate to your project. In this post I&amp;rsquo;ll discuss how to integrate it to C++/Qt project.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Classic Producer-Consumer in Qt/C&#43;&#43;</title>
      <link>https://intmaker.com/2016/classic-producer-consumer-in-qtc/</link>
      <pubDate>Mon, 28 Mar 2016 15:44:38 +0000</pubDate>
      
      <guid>https://intmaker.com/2016/classic-producer-consumer-in-qtc/</guid>
      <description>&lt;p&gt;Producer-Consumer is a classic pattern of interaction between two or more threads which share common tasks queue and workers who process that queue. When I came to similar task first I googled for standard approaches in Qt to solve this problem, but they were based on signals/slots plus synchronization primitives while I wanted simple and clear solution. Of course, in the end I&amp;rsquo;ve invented my own wheel and I invite you to take a look at it.&lt;/p&gt;

&lt;p&gt;For the synchronization in Producer-Consumer it&amp;rsquo;s useful to use Mutex and some kind of WaitingEvent for synchronous waiting until mutex is acquired. In Qt you have QMutex and QWaitCondition which are all that we need.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s suppose we have following data structures:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;QWaitCondition m_WaitAnyItem;
QMutex m_QueueMutex;
QVector&amp;lt;T*&amp;gt; m_Queue;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where T is type of messages we&amp;rsquo;re producing/consuming. So we have queue of elements being processed, mutex to secure access to the queue and wait condition to wait if the queue is empty.&lt;/p&gt;

&lt;p&gt;For Producer-Consumer usually we need methods &lt;code&gt;produce()&lt;/code&gt; and &lt;code&gt;consume()&lt;/code&gt;. Let&amp;rsquo;s see how we can implement them.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Handling drag&#39;n&#39;drop of files in Qt under OS X</title>
      <link>https://intmaker.com/2015/handling-dragndrop-of-files-in-qt-under-os-x/</link>
      <pubDate>Wed, 25 Nov 2015 18:00:02 +0000</pubDate>
      
      <guid>https://intmaker.com/2015/handling-dragndrop-of-files-in-qt-under-os-x/</guid>
      <description>&lt;p&gt;If you ever tried to handle drag&amp;rsquo;n&amp;rsquo;drop files in your Qt application, you would usually come up with the code like the following.&lt;/p&gt;

&lt;p&gt;First of all you will need a Drop Area somewhere in your application, which will handle drops&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DropArea {
  anchors.fill: parent
  onDropped: {
    if (drop.hasUrls) {
      var filesCount = yourCppModel.dropFiles(drop.urls)
      console.log(filesCount + &#39; files added via drag&amp;amp;drop&#39;)
    }
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where &lt;em&gt;yourCppModel&lt;/em&gt; is a model exposed to Qml in main.cpp or wherever like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;QQmlContext *rootContext = engine.rootContext();
rootContext-&amp;gt;setContextProperty(&lt;span style=&#34;font-style:italic&#34;&gt;&amp;#34;yourCppModel&amp;#34;&lt;/span&gt;, &amp;amp;myCppModel);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and &lt;code&gt;int dropFiles(const QList&amp;lt;QUrl&amp;gt; &amp;amp;urls)&lt;/code&gt; is just an ordinary method exposed to QML via &lt;em&gt;&lt;code&gt;Q_INVOKABLE&lt;/code&gt;&lt;/em&gt; attribute.&lt;/p&gt;

&lt;p&gt;You will sure notice everything works fine unless you&amp;rsquo;re working under OS X. In OS X instead of QUrls to local files you will get something like this: _ &lt;code&gt;file:///.file/id=6571367.2773272/&lt;/code&gt;_. There&amp;rsquo;s a bug in Qt for that and it even looks closed, but it still doesn&amp;rsquo;t work for me that&amp;rsquo;s why I&amp;rsquo;ve implemented my own helper using mixing of Objective-C and Qt-C++ code.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Interesting issues and features of Qt programming</title>
      <link>https://intmaker.com/2015/interesting-issues-and-features-of-qt-programming/</link>
      <pubDate>Thu, 16 Jul 2015 16:17:35 +0000</pubDate>
      
      <guid>https://intmaker.com/2015/interesting-issues-and-features-of-qt-programming/</guid>
      <description>In this post I enlist all interesting facts and issues I&amp;rsquo;ve experienced while developing my first project in Qt (from 5.3 to 5.4 5.6)
18.02 - QSettings interface in Qml transformed bool to string and was always true on deserialization
18.02 - QByteArray returned from local scope crashed with heap corruption on return of function (destructor of QByteArray)
Qt can delete your object in it&amp;rsquo;s gui loop. QObject should have CppManaged attribute and it should be set before returning object to UI code.</description>
    </item>
    
    <item>
      <title>Text encryption in Qt/C&#43;&#43; with tiny AES 128bit</title>
      <link>https://intmaker.com/2015/text-encryption-in-qtc-with-tiny-aes-128bit/</link>
      <pubDate>Tue, 24 Feb 2015 15:12:39 +0000</pubDate>
      
      <guid>https://intmaker.com/2015/text-encryption-in-qtc-with-tiny-aes-128bit/</guid>
      <description>&lt;p&gt;Have you ever needed a small, really small encryption in your C++ project for some piece of text? Say, credentials, login details or any other sensitive data? Of course, the best way is to keep just hash of salted password, but&amp;hellip; What if you just &lt;strong&gt;need&lt;/strong&gt; to do it and the size is so much critical for you?&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;re &lt;a href=&#34;https://www.openssl.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;openSSL&lt;/a&gt; library and &lt;a href=&#34;http://www.cryptopp.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Crypto++&lt;/a&gt; library which are monsters with tons of encryption algorithms, used in a number of solid projects etc. But.. they are big! I don&amp;rsquo;t want 30Mb library in my tiny project, which weights 10 Mb with high-resolution icons for OS X which weight by itself 5Mb. So I don&amp;rsquo;t want to sacrifice the size but still need encryption. Meet &lt;a href=&#34;https://github.com/kokke/tiny-AES128-C&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tiny-AES.&lt;/a&gt; It&amp;rsquo;s really small AES 128-bit library which does encryption in &lt;a href=&#34;https://en.wikipedia.org/wiki/Block_cipher_modes_of_operation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CBC and ECB modes&lt;/a&gt;. It really contains everything you needed just to encrypt and decrypt your sensitive data and forget about it.&lt;/p&gt;

&lt;p&gt;You can find example under the hood.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>