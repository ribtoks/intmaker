<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>url on Int Maker</title>
    <link>https://intmaker.com/tags/url/</link>
    <description>Recent content in url on Int Maker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 25 Nov 2015 18:00:02 +0000</lastBuildDate>
    
	<atom:link href="https://intmaker.com/tags/url/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Handling drag&#39;n&#39;drop of files in Qt under OS X</title>
      <link>https://intmaker.com/2015/handling-dragndrop-of-files-in-qt-under-os-x/</link>
      <pubDate>Wed, 25 Nov 2015 18:00:02 +0000</pubDate>
      
      <guid>https://intmaker.com/2015/handling-dragndrop-of-files-in-qt-under-os-x/</guid>
      <description>&lt;p&gt;If you ever tried to handle drag&amp;rsquo;n&amp;rsquo;drop files in your Qt application, you would usually come up with the code like the following.&lt;/p&gt;

&lt;p&gt;First of all you will need a Drop Area somewhere in your application, which will handle drops&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DropArea {
  anchors.fill: parent
  onDropped: {
    if (drop.hasUrls) {
      var filesCount = yourCppModel.dropFiles(drop.urls)
      console.log(filesCount + &#39; files added via drag&amp;amp;drop&#39;)
    }
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where &lt;em&gt;yourCppModel&lt;/em&gt; is a model exposed to Qml in main.cpp or wherever like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;QQmlContext *rootContext = engine.rootContext();
rootContext-&amp;gt;setContextProperty(&lt;span style=&#34;font-style:italic&#34;&gt;&amp;#34;yourCppModel&amp;#34;&lt;/span&gt;, &amp;amp;myCppModel);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and &lt;code&gt;int dropFiles(const QList&amp;lt;QUrl&amp;gt; &amp;amp;urls)&lt;/code&gt; is just an ordinary method exposed to QML via &lt;em&gt;&lt;code&gt;Q_INVOKABLE&lt;/code&gt;&lt;/em&gt; attribute.&lt;/p&gt;

&lt;p&gt;You will sure notice everything works fine unless you&amp;rsquo;re working under OS X. In OS X instead of QUrls to local files you will get something like this: _ &lt;code&gt;file:///.file/id=6571367.2773272/&lt;/code&gt;_. There&amp;rsquo;s a bug in Qt for that and it even looks closed, but it still doesn&amp;rsquo;t work for me that&amp;rsquo;s why I&amp;rsquo;ve implemented my own helper using mixing of Objective-C and Qt-C++ code.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>