<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>architecture on Int Maker</title>
    <link>https://intmaker.com/tags/architecture/</link>
    <description>Recent content in architecture on Int Maker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 31 Jul 2018 00:19:43 +0300</lastBuildDate>
    
	<atom:link href="https://intmaker.com/tags/architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dependency management in classes</title>
      <link>https://intmaker.com/2018/dependency-management/</link>
      <pubDate>Tue, 31 Jul 2018 00:19:43 +0300</pubDate>
      
      <guid>https://intmaker.com/2018/dependency-management/</guid>
      <description>Object-oriented languages like Ruby, C++ or Java tend to have one common problem among others: dependency injection. It is very rare for a class to be fully self-contained and never depend on anything else in your code. Usually there&amp;rsquo;re multiple connections between them: simple, transitive or even circular. And designing good dependency injection often makes a huge difference in terms of maintainability and testability of your code. This is the thing that should be done properly rather sooner than later.</description>
    </item>
    
  </channel>
</rss>