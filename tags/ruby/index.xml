<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ruby on Int Maker</title>
    <link>https://intmaker.com/tags/ruby/</link>
    <description>Recent content in ruby on Int Maker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 01 Mar 2018 00:23:10 +0000</lastBuildDate>
    
	<atom:link href="https://intmaker.com/tags/ruby/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Migrating blog from Wordpress to Jekyll</title>
      <link>https://intmaker.com/2018/migrate-wordpress-to-jekyll/</link>
      <pubDate>Thu, 01 Mar 2018 00:23:10 +0000</pubDate>
      
      <guid>https://intmaker.com/2018/migrate-wordpress-to-jekyll/</guid>
      <description>&lt;p&gt;Living in the modern age of 0-day vulnerabilities is complicated when you have a Wordpress blog. Since I didn&amp;rsquo;t have anything fancy in there I decided to migrate it to static pages. Sounds easy? I&amp;rsquo;m sure it does. See what it takes to migrate an average blog with images and crosslinks. I&amp;rsquo;ve organized my process in a sort of a step by step manual.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Implementing autocomplete for English in C&#43;&#43;</title>
      <link>https://intmaker.com/2016/implementing-autocomplete-for-english-in-c/</link>
      <pubDate>Sun, 27 Mar 2016 22:07:35 +0000</pubDate>
      
      <guid>https://intmaker.com/2016/implementing-autocomplete-for-english-in-c/</guid>
      <description>&lt;p&gt;When it comes to implementing autocompletion in C++ in some type of input field, the question is which algorithm to choose and where to get the source for completion. In this post I&amp;rsquo;ll try to answer both questions.&lt;/p&gt;

&lt;p&gt;As for the algorithm, SO gives us hints about tries, segment trees and others. You can find &lt;a href=&#34;http://dhruvbird.blogspot.com.ee/2010/09/very-fast-approach-to-search.html&#34; target=&#34;_blank&#34;&gt;good article&lt;/a&gt; about them. Author has implemented some of them in a repository called FACE (fastest auto-complete in the east). You can easily find it &lt;a href=&#34;https://github.com/duckduckgo/cpp-libface&#34; target=&#34;_blank&#34;&gt;on GitHub&lt;/a&gt;. This solution is used for the autocompletion in search engine Duck-Duck-Go which should tell you how good it is. Unfortunately their solution requires dependencies on &lt;code&gt;libuv&lt;/code&gt; and joyent &lt;code&gt;http-parser&lt;/code&gt;, which is not good in case you need just to integrate autocompletion functionality into your C++ application, but not build auto-complete server and send queries to it. Another drawback - &lt;code&gt;libuv&lt;/code&gt; and &lt;code&gt;cpp-libface&lt;/code&gt; itself fails to compile in Windows which is bad in case you&amp;rsquo;re building cross-platform solution.&lt;/p&gt;

&lt;p&gt;You can find out how to built FACE into your cross-platform C++ application below.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Generation of spiral matrices</title>
      <link>https://intmaker.com/2014/generating-spiral-matrices/</link>
      <pubDate>Thu, 30 Jan 2014 20:55:20 +0000</pubDate>
      
      <guid>https://intmaker.com/2014/generating-spiral-matrices/</guid>
      <description>Have you ever heard about this simple problem? Generating spiral matrices. The one like this:
1 2 3 4 5 16 17 18 19 6 15 24 25 20 7 14 23 22 21 8 13 12 11 10 9  After a hour of trying different approaches (except one which consists of 4 loops for filling up &amp;amp; down row and left &amp;amp; right) I&amp;rsquo;ve written a working ruby snippet (just for fun):</description>
    </item>
    
    <item>
      <title>Rails development environment in Emacs on OpenSuSE Linux</title>
      <link>https://intmaker.com/2013/rails-development-environment-in-emacs-on-opensuse-linux/</link>
      <pubDate>Tue, 29 Oct 2013 23:12:15 +0000</pubDate>
      
      <guid>https://intmaker.com/2013/rails-development-environment-in-emacs-on-opensuse-linux/</guid>
      <description>&lt;p&gt;Today we&amp;rsquo;ll set up a complete Ruby On Rails development environment on Linux. For an IDE we&amp;rsquo;ll use Emacs and for host system - OpenSUSE.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s install latest Ruby+Rails bundle before configuring Emacs.Â You can refer to &lt;a title=&#34;Rails on OpenSUSE 12.1&#34; href=&#34;http://alphacluster.wordpress.com/2012/03/29/rails-on-opensuse-12-1/&#34; target=&#34;_blank&#34;&gt;nice article&lt;/a&gt; on that. In short, you need get RVM and follow through script steps in terminal:&lt;/p&gt;

&lt;pre&gt;&lt;span style=&#34;color: #0000ff;&#34;&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&gt;&lt;/span&gt; bash&lt;/span&gt; -s stable &lt; &lt;(&lt;span style=&#34;color: #0000ff;&#34;&gt;curl&lt;/span&gt; -s &lt;span style=&#34;color: #808000;&#34;&gt;https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer&lt;/span&gt;)&lt;/pre&gt;

&lt;p&gt;Then load path to installed RVM in current bash session:&lt;/p&gt;

&lt;pre&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&gt;&lt;/span&gt; . ~/.bash_profile&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s a bit frustrating that if bash finds a _.bash&lt;em&gt;profile&lt;/em&gt; file, it ignores &lt;em&gt;.bashrc&lt;/em&gt;, so be careful. Usually, I just move this one line from _.bash&lt;em&gt;profile&lt;/em&gt; to &lt;em&gt;.profile&lt;/em&gt; or &lt;em&gt;.bashrc&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Then check requirements and install everything what is needed&lt;/p&gt;

&lt;pre&gt;&gt; rvm requirements&lt;/pre&gt;

&lt;p&gt;Now let&amp;rsquo;s set ruby version to 2.0 and install rails (4):&lt;/p&gt;

&lt;pre&gt;&gt; rvm install 2.0
&gt; rvm use 2.0
&gt; gem install rails
&gt; gem install sqlite3&lt;/pre&gt;

&lt;p&gt;Now, when everything is ready, we can configure Emacs installation. I assume you&amp;rsquo;ve already installed emacs package via your favorite package manager.&lt;/p&gt;

&lt;p&gt;Then lets add some custom configuration file for ruby configs in the &lt;em&gt;.emacs.d&lt;/em&gt; directory, say &lt;em&gt;ruby-configuration.el&lt;/em&gt; and add it to your .emacs file using&lt;/p&gt;

&lt;pre&gt;(&lt;span style=&#34;color: #0000ff;&#34;&gt;load&lt;/span&gt; &lt;span style=&#34;color: #339966;&#34;&gt;&#34;~/.emacs.d/ruby-configuration.el&#34;&lt;/span&gt;)&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Ruby style loops in C#</title>
      <link>https://intmaker.com/2012/ruby-style-loops-in-c/</link>
      <pubDate>Wed, 31 Oct 2012 13:44:18 +0000</pubDate>
      
      <guid>https://intmaker.com/2012/ruby-style-loops-in-c/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://blog.naiznoiz.com/2009/03/c-loops-ruby-style&#34; title=&#34;Ruby style loops in C#&#34;&gt;Ruby style loops in C#&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple and useful solution to use ruby-like loops in C#. Also, you can add extensions&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>