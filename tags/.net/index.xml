<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.net on Int Maker</title>
    <link>https://intmaker.com/tags/.net/</link>
    <description>Recent content in .net on Int Maker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 29 Aug 2016 12:28:38 +0000</lastBuildDate>
    
	<atom:link href="https://intmaker.com/tags/.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Resources to learn and understand parallel programming. The hard way</title>
      <link>https://intmaker.com/2016/resources-to-learn-and-understand-parallel-programming-the-hard-way/</link>
      <pubDate>Mon, 29 Aug 2016 12:28:38 +0000</pubDate>
      
      <guid>https://intmaker.com/2016/resources-to-learn-and-understand-parallel-programming-the-hard-way/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;There&amp;rsquo;s no way other than the hard way. &amp;copy;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Parallel programming is considered as not easy or even advanced topic by many programmers. It&amp;rsquo;s the starting point for even more advanced stuff like distributed computations, reliability, CAP theorem, consensus problems and much more. Besides, deep understanding of how CPU and operating system works can help you to write less buggy software and parallel programming can help you with that too.&lt;/p&gt;

&lt;p&gt;In this post I will focus on books describing parallel programming using 1 computer and 1 CPU using classical approaches. Neither they contain SSE instructions guides nor you will find matterials on CUDA or OpenCL. Similary you will find no resourced about Hadoop and/or MapReduce technologies and nothing about technologies supporting parallel programming out of the box like Go or Erlang.&lt;/p&gt;

&lt;p&gt;So I will go now through all the resources which I find more or less useful. I&amp;rsquo;m not going to stick to any technology in general - the point is to understand the topic from different perspectives. The materials I&amp;rsquo;m refering to in general should not be considered as entry-level -Â  they require fair amount of knowledge, but nevertheless, list goes sorted starting from &amp;ldquo;easier&amp;rdquo; things.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>.NET String Dictionary vs string switch performance</title>
      <link>https://intmaker.com/2015/net-string-dictionary-vs-string-switch-performance/</link>
      <pubDate>Wed, 18 Feb 2015 22:11:26 +0000</pubDate>
      
      <guid>https://intmaker.com/2015/net-string-dictionary-vs-string-switch-performance/</guid>
      <description>&lt;p&gt;I had a simple task to map a collection of objects with string property. Map function should replace one string property to another from set of 5-6 strings. Existing solution used Dictionary initialized with those hard-coded values. Once upon a time I tried to compare Dictionary with &lt;em&gt;int&lt;/em&gt; keys to &lt;em&gt;int&lt;/em&gt; switch and int switch was FAR better. It was chess engine so performance mattered.&lt;/p&gt;

&lt;p&gt;Now it&amp;rsquo;s a web request with thousands of rows of reply, serialized to json, so performance matters again. I wrote simple program, which generated 10 million instances of my simple class with several properties and mapped this list with both methods. Before that I ensured that both methods were JIT&amp;rsquo;ed. You can find &lt;a href=&#34;https://github.com/Ribtoks/heap/blob/master/PerformanceTests/StringSwitchTest/StringSwitchTest/Program.cs&#34; target=&#34;_blank&#34;&gt;source code at Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Details below..&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ruby style loops in C#</title>
      <link>https://intmaker.com/2012/ruby-style-loops-in-c/</link>
      <pubDate>Wed, 31 Oct 2012 13:44:18 +0000</pubDate>
      
      <guid>https://intmaker.com/2012/ruby-style-loops-in-c/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://blog.naiznoiz.com/2009/03/c-loops-ruby-style&#34; title=&#34;Ruby style loops in C#&#34;&gt;Ruby style loops in C#&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple and useful solution to use ruby-like loops in C#. Also, you can add extensions&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>