<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spelling on Int Maker</title>
    <link>https://intmaker.com/tags/spelling/</link>
    <description>Recent content in spelling on Int Maker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 05 Jun 2016 12:24:38 +0000</lastBuildDate>
    
	<atom:link href="https://intmaker.com/tags/spelling/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Implementing spellchecking in desktop application in C&#43;&#43;</title>
      <link>https://intmaker.com/2016/implementing-spellchecking-in-desktop-application-in-c/</link>
      <pubDate>Sun, 05 Jun 2016 12:24:38 +0000</pubDate>
      
      <guid>https://intmaker.com/2016/implementing-spellchecking-in-desktop-application-in-c/</guid>
      <description>&lt;p&gt;When user is supposed to enter significant amount of text in your application, it&amp;rsquo;s better to help him/her to control it with checking spelling. Basically, to check spelling you need a dictionary with words and algorithm to order these words. Also it might be useful to provide user with possible corrections for any spelling error. Here where &lt;a href=&#34;https://hunspell.github.io/&#34;&gt;Hunspell&lt;/a&gt; comes handy. It&amp;rsquo;s an open source library built on top of MySpell library and used in a significant number of projects varying from open source projects like Firefox to proprietary like OS X. It contains bindings to a number of platforms (.NET, Ruby etc.) and should be fairly easy to integrate to your project. In this post I&amp;rsquo;ll discuss how to integrate it to C++/Qt project.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>